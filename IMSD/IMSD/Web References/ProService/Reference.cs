//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace IMSD.ProService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ProductServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ProductService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOneCategoryInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCategoryInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNumberOfPoductIncategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOnlyProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOneProductInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateProductInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductQuantityByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductNameByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductImageurlByIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ProductService() {
            this.Url = global::IMSD.Properties.Settings.Default.IMSD_ProService_ProductService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddCategoryCompletedEventHandler AddCategoryCompleted;
        
        /// <remarks/>
        public event GetCategoryCompletedEventHandler GetCategoryCompleted;
        
        /// <remarks/>
        public event AddProductCompletedEventHandler AddProductCompleted;
        
        /// <remarks/>
        public event DeleteProductCompletedEventHandler DeleteProductCompleted;
        
        /// <remarks/>
        public event DeleteCategoryCompletedEventHandler DeleteCategoryCompleted;
        
        /// <remarks/>
        public event getOneCategoryInfoCompletedEventHandler getOneCategoryInfoCompleted;
        
        /// <remarks/>
        public event updateCategoryInfoCompletedEventHandler updateCategoryInfoCompleted;
        
        /// <remarks/>
        public event GetNumberOfPoductIncategoryCompletedEventHandler GetNumberOfPoductIncategoryCompleted;
        
        /// <remarks/>
        public event GetProductListCompletedEventHandler GetProductListCompleted;
        
        /// <remarks/>
        public event DeleteOnlyProductCompletedEventHandler DeleteOnlyProductCompleted;
        
        /// <remarks/>
        public event getOneProductInfoCompletedEventHandler getOneProductInfoCompleted;
        
        /// <remarks/>
        public event updateProductInfoCompletedEventHandler updateProductInfoCompleted;
        
        /// <remarks/>
        public event GetProductQuantityByIdCompletedEventHandler GetProductQuantityByIdCompleted;
        
        /// <remarks/>
        public event GetProductNameByIdCompletedEventHandler GetProductNameByIdCompleted;
        
        /// <remarks/>
        public event GetProductImageurlByIdCompletedEventHandler GetProductImageurlByIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddCategory(string Catname) {
            object[] results = this.Invoke("AddCategory", new object[] {
                        Catname});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddCategoryAsync(string Catname) {
            this.AddCategoryAsync(Catname, null);
        }
        
        /// <remarks/>
        public void AddCategoryAsync(string Catname, object userState) {
            if ((this.AddCategoryOperationCompleted == null)) {
                this.AddCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCategoryOperationCompleted);
            }
            this.InvokeAsync("AddCategory", new object[] {
                        Catname}, this.AddCategoryOperationCompleted, userState);
        }
        
        private void OnAddCategoryOperationCompleted(object arg) {
            if ((this.AddCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCategoryCompleted(this, new AddCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCategory() {
            object[] results = this.Invoke("GetCategory", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryAsync() {
            this.GetCategoryAsync(null);
        }
        
        /// <remarks/>
        public void GetCategoryAsync(object userState) {
            if ((this.GetCategoryOperationCompleted == null)) {
                this.GetCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryOperationCompleted);
            }
            this.InvokeAsync("GetCategory", new object[0], this.GetCategoryOperationCompleted, userState);
        }
        
        private void OnGetCategoryOperationCompleted(object arg) {
            if ((this.GetCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryCompleted(this, new GetCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddProduct(int CatId, string ProductName, float Price, string Quantity, string qScale, string imgLoc) {
            object[] results = this.Invoke("AddProduct", new object[] {
                        CatId,
                        ProductName,
                        Price,
                        Quantity,
                        qScale,
                        imgLoc});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddProductAsync(int CatId, string ProductName, float Price, string Quantity, string qScale, string imgLoc) {
            this.AddProductAsync(CatId, ProductName, Price, Quantity, qScale, imgLoc, null);
        }
        
        /// <remarks/>
        public void AddProductAsync(int CatId, string ProductName, float Price, string Quantity, string qScale, string imgLoc, object userState) {
            if ((this.AddProductOperationCompleted == null)) {
                this.AddProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProductOperationCompleted);
            }
            this.InvokeAsync("AddProduct", new object[] {
                        CatId,
                        ProductName,
                        Price,
                        Quantity,
                        qScale,
                        imgLoc}, this.AddProductOperationCompleted, userState);
        }
        
        private void OnAddProductOperationCompleted(object arg) {
            if ((this.AddProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProductCompleted(this, new AddProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteProduct(string id) {
            this.Invoke("DeleteProduct", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteProductAsync(string id) {
            this.DeleteProductAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteProductAsync(string id, object userState) {
            if ((this.DeleteProductOperationCompleted == null)) {
                this.DeleteProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProductOperationCompleted);
            }
            this.InvokeAsync("DeleteProduct", new object[] {
                        id}, this.DeleteProductOperationCompleted, userState);
        }
        
        private void OnDeleteProductOperationCompleted(object arg) {
            if ((this.DeleteProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteCategory(string id) {
            this.Invoke("DeleteCategory", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteCategoryAsync(string id) {
            this.DeleteCategoryAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteCategoryAsync(string id, object userState) {
            if ((this.DeleteCategoryOperationCompleted == null)) {
                this.DeleteCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCategoryOperationCompleted);
            }
            this.InvokeAsync("DeleteCategory", new object[] {
                        id}, this.DeleteCategoryOperationCompleted, userState);
        }
        
        private void OnDeleteCategoryOperationCompleted(object arg) {
            if ((this.DeleteCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCategoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getOneCategoryInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getOneCategoryInfo(string id) {
            object[] results = this.Invoke("getOneCategoryInfo", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getOneCategoryInfoAsync(string id) {
            this.getOneCategoryInfoAsync(id, null);
        }
        
        /// <remarks/>
        public void getOneCategoryInfoAsync(string id, object userState) {
            if ((this.getOneCategoryInfoOperationCompleted == null)) {
                this.getOneCategoryInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOneCategoryInfoOperationCompleted);
            }
            this.InvokeAsync("getOneCategoryInfo", new object[] {
                        id}, this.getOneCategoryInfoOperationCompleted, userState);
        }
        
        private void OngetOneCategoryInfoOperationCompleted(object arg) {
            if ((this.getOneCategoryInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOneCategoryInfoCompleted(this, new getOneCategoryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateCategoryInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateCategoryInfo(string id, string categoryName) {
            object[] results = this.Invoke("updateCategoryInfo", new object[] {
                        id,
                        categoryName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateCategoryInfoAsync(string id, string categoryName) {
            this.updateCategoryInfoAsync(id, categoryName, null);
        }
        
        /// <remarks/>
        public void updateCategoryInfoAsync(string id, string categoryName, object userState) {
            if ((this.updateCategoryInfoOperationCompleted == null)) {
                this.updateCategoryInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCategoryInfoOperationCompleted);
            }
            this.InvokeAsync("updateCategoryInfo", new object[] {
                        id,
                        categoryName}, this.updateCategoryInfoOperationCompleted, userState);
        }
        
        private void OnupdateCategoryInfoOperationCompleted(object arg) {
            if ((this.updateCategoryInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCategoryInfoCompleted(this, new updateCategoryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNumberOfPoductIncategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNumberOfPoductIncategory() {
            object[] results = this.Invoke("GetNumberOfPoductIncategory", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNumberOfPoductIncategoryAsync() {
            this.GetNumberOfPoductIncategoryAsync(null);
        }
        
        /// <remarks/>
        public void GetNumberOfPoductIncategoryAsync(object userState) {
            if ((this.GetNumberOfPoductIncategoryOperationCompleted == null)) {
                this.GetNumberOfPoductIncategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNumberOfPoductIncategoryOperationCompleted);
            }
            this.InvokeAsync("GetNumberOfPoductIncategory", new object[0], this.GetNumberOfPoductIncategoryOperationCompleted, userState);
        }
        
        private void OnGetNumberOfPoductIncategoryOperationCompleted(object arg) {
            if ((this.GetNumberOfPoductIncategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNumberOfPoductIncategoryCompleted(this, new GetNumberOfPoductIncategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductList() {
            object[] results = this.Invoke("GetProductList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductListAsync() {
            this.GetProductListAsync(null);
        }
        
        /// <remarks/>
        public void GetProductListAsync(object userState) {
            if ((this.GetProductListOperationCompleted == null)) {
                this.GetProductListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductListOperationCompleted);
            }
            this.InvokeAsync("GetProductList", new object[0], this.GetProductListOperationCompleted, userState);
        }
        
        private void OnGetProductListOperationCompleted(object arg) {
            if ((this.GetProductListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductListCompleted(this, new GetProductListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteOnlyProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteOnlyProduct(string PId, string CatId) {
            object[] results = this.Invoke("DeleteOnlyProduct", new object[] {
                        PId,
                        CatId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOnlyProductAsync(string PId, string CatId) {
            this.DeleteOnlyProductAsync(PId, CatId, null);
        }
        
        /// <remarks/>
        public void DeleteOnlyProductAsync(string PId, string CatId, object userState) {
            if ((this.DeleteOnlyProductOperationCompleted == null)) {
                this.DeleteOnlyProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOnlyProductOperationCompleted);
            }
            this.InvokeAsync("DeleteOnlyProduct", new object[] {
                        PId,
                        CatId}, this.DeleteOnlyProductOperationCompleted, userState);
        }
        
        private void OnDeleteOnlyProductOperationCompleted(object arg) {
            if ((this.DeleteOnlyProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOnlyProductCompleted(this, new DeleteOnlyProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getOneProductInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getOneProductInfo(string CatId, string ProductId) {
            object[] results = this.Invoke("getOneProductInfo", new object[] {
                        CatId,
                        ProductId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getOneProductInfoAsync(string CatId, string ProductId) {
            this.getOneProductInfoAsync(CatId, ProductId, null);
        }
        
        /// <remarks/>
        public void getOneProductInfoAsync(string CatId, string ProductId, object userState) {
            if ((this.getOneProductInfoOperationCompleted == null)) {
                this.getOneProductInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOneProductInfoOperationCompleted);
            }
            this.InvokeAsync("getOneProductInfo", new object[] {
                        CatId,
                        ProductId}, this.getOneProductInfoOperationCompleted, userState);
        }
        
        private void OngetOneProductInfoOperationCompleted(object arg) {
            if ((this.getOneProductInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOneProductInfoCompleted(this, new getOneProductInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateProductInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateProductInfo(string CatId, string ProductId, string ProductName, string price, string quantity, string scale, string imgLoc) {
            object[] results = this.Invoke("updateProductInfo", new object[] {
                        CatId,
                        ProductId,
                        ProductName,
                        price,
                        quantity,
                        scale,
                        imgLoc});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateProductInfoAsync(string CatId, string ProductId, string ProductName, string price, string quantity, string scale, string imgLoc) {
            this.updateProductInfoAsync(CatId, ProductId, ProductName, price, quantity, scale, imgLoc, null);
        }
        
        /// <remarks/>
        public void updateProductInfoAsync(string CatId, string ProductId, string ProductName, string price, string quantity, string scale, string imgLoc, object userState) {
            if ((this.updateProductInfoOperationCompleted == null)) {
                this.updateProductInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateProductInfoOperationCompleted);
            }
            this.InvokeAsync("updateProductInfo", new object[] {
                        CatId,
                        ProductId,
                        ProductName,
                        price,
                        quantity,
                        scale,
                        imgLoc}, this.updateProductInfoOperationCompleted, userState);
        }
        
        private void OnupdateProductInfoOperationCompleted(object arg) {
            if ((this.updateProductInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateProductInfoCompleted(this, new updateProductInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductQuantityById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProductQuantityById(string ProductId) {
            object[] results = this.Invoke("GetProductQuantityById", new object[] {
                        ProductId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductQuantityByIdAsync(string ProductId) {
            this.GetProductQuantityByIdAsync(ProductId, null);
        }
        
        /// <remarks/>
        public void GetProductQuantityByIdAsync(string ProductId, object userState) {
            if ((this.GetProductQuantityByIdOperationCompleted == null)) {
                this.GetProductQuantityByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductQuantityByIdOperationCompleted);
            }
            this.InvokeAsync("GetProductQuantityById", new object[] {
                        ProductId}, this.GetProductQuantityByIdOperationCompleted, userState);
        }
        
        private void OnGetProductQuantityByIdOperationCompleted(object arg) {
            if ((this.GetProductQuantityByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductQuantityByIdCompleted(this, new GetProductQuantityByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductNameById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProductNameById(string ProductId) {
            object[] results = this.Invoke("GetProductNameById", new object[] {
                        ProductId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductNameByIdAsync(string ProductId) {
            this.GetProductNameByIdAsync(ProductId, null);
        }
        
        /// <remarks/>
        public void GetProductNameByIdAsync(string ProductId, object userState) {
            if ((this.GetProductNameByIdOperationCompleted == null)) {
                this.GetProductNameByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductNameByIdOperationCompleted);
            }
            this.InvokeAsync("GetProductNameById", new object[] {
                        ProductId}, this.GetProductNameByIdOperationCompleted, userState);
        }
        
        private void OnGetProductNameByIdOperationCompleted(object arg) {
            if ((this.GetProductNameByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductNameByIdCompleted(this, new GetProductNameByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductImageurlById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProductImageurlById(string ProductId) {
            object[] results = this.Invoke("GetProductImageurlById", new object[] {
                        ProductId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductImageurlByIdAsync(string ProductId) {
            this.GetProductImageurlByIdAsync(ProductId, null);
        }
        
        /// <remarks/>
        public void GetProductImageurlByIdAsync(string ProductId, object userState) {
            if ((this.GetProductImageurlByIdOperationCompleted == null)) {
                this.GetProductImageurlByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductImageurlByIdOperationCompleted);
            }
            this.InvokeAsync("GetProductImageurlById", new object[] {
                        ProductId}, this.GetProductImageurlByIdOperationCompleted, userState);
        }
        
        private void OnGetProductImageurlByIdOperationCompleted(object arg) {
            if ((this.GetProductImageurlByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductImageurlByIdCompleted(this, new GetProductImageurlByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddCategoryCompletedEventHandler(object sender, AddCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCategoryCompletedEventHandler(object sender, GetCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddProductCompletedEventHandler(object sender, AddProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteProductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteCategoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getOneCategoryInfoCompletedEventHandler(object sender, getOneCategoryInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOneCategoryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOneCategoryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateCategoryInfoCompletedEventHandler(object sender, updateCategoryInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCategoryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCategoryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetNumberOfPoductIncategoryCompletedEventHandler(object sender, GetNumberOfPoductIncategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNumberOfPoductIncategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNumberOfPoductIncategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetProductListCompletedEventHandler(object sender, GetProductListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteOnlyProductCompletedEventHandler(object sender, DeleteOnlyProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOnlyProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOnlyProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getOneProductInfoCompletedEventHandler(object sender, getOneProductInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOneProductInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOneProductInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateProductInfoCompletedEventHandler(object sender, updateProductInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateProductInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateProductInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetProductQuantityByIdCompletedEventHandler(object sender, GetProductQuantityByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductQuantityByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductQuantityByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetProductNameByIdCompletedEventHandler(object sender, GetProductNameByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductNameByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductNameByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetProductImageurlByIdCompletedEventHandler(object sender, GetProductImageurlByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductImageurlByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductImageurlByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591