//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace IMSD.DUtilityService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DataUtilityServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MarshalByRefObject))]
    public partial class DataUtilityService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback checkEmptyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageFromBrowseOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertByteArrayToBitmapOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertBitmapToByteArrayOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DataUtilityService() {
            this.Url = global::IMSD.Properties.Settings.Default.IMSD_DUtilityService_DataUtilityService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event checkEmptyCompletedEventHandler checkEmptyCompleted;
        
        /// <remarks/>
        public event GetCurrentDateTimeCompletedEventHandler GetCurrentDateTimeCompleted;
        
        /// <remarks/>
        public event ResizeCompletedEventHandler ResizeCompleted;
        
        /// <remarks/>
        public event GetImageFromBrowseCompletedEventHandler GetImageFromBrowseCompleted;
        
        /// <remarks/>
        public event ConvertByteArrayToBitmapCompletedEventHandler ConvertByteArrayToBitmapCompleted;
        
        /// <remarks/>
        public event ConvertBitmapToByteArrayCompletedEventHandler ConvertBitmapToByteArrayCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkEmpty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkEmpty(string val) {
            object[] results = this.Invoke("checkEmpty", new object[] {
                        val});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkEmptyAsync(string val) {
            this.checkEmptyAsync(val, null);
        }
        
        /// <remarks/>
        public void checkEmptyAsync(string val, object userState) {
            if ((this.checkEmptyOperationCompleted == null)) {
                this.checkEmptyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckEmptyOperationCompleted);
            }
            this.InvokeAsync("checkEmpty", new object[] {
                        val}, this.checkEmptyOperationCompleted, userState);
        }
        
        private void OncheckEmptyOperationCompleted(object arg) {
            if ((this.checkEmptyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkEmptyCompleted(this, new checkEmptyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentDateTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetCurrentDateTime() {
            object[] results = this.Invoke("GetCurrentDateTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentDateTimeAsync() {
            this.GetCurrentDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentDateTimeAsync(object userState) {
            if ((this.GetCurrentDateTimeOperationCompleted == null)) {
                this.GetCurrentDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentDateTimeOperationCompleted);
            }
            this.InvokeAsync("GetCurrentDateTime", new object[0], this.GetCurrentDateTimeOperationCompleted, userState);
        }
        
        private void OnGetCurrentDateTimeOperationCompleted(object arg) {
            if ((this.GetCurrentDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentDateTimeCompleted(this, new GetCurrentDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Resize", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Resize([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] image, int width, int height) {
            object[] results = this.Invoke("Resize", new object[] {
                        image,
                        width,
                        height});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ResizeAsync(byte[] image, int width, int height) {
            this.ResizeAsync(image, width, height, null);
        }
        
        /// <remarks/>
        public void ResizeAsync(byte[] image, int width, int height, object userState) {
            if ((this.ResizeOperationCompleted == null)) {
                this.ResizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResizeOperationCompleted);
            }
            this.InvokeAsync("Resize", new object[] {
                        image,
                        width,
                        height}, this.ResizeOperationCompleted, userState);
        }
        
        private void OnResizeOperationCompleted(object arg) {
            if ((this.ResizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResizeCompleted(this, new ResizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageFromBrowse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetImageFromBrowse(string imgLoc) {
            object[] results = this.Invoke("GetImageFromBrowse", new object[] {
                        imgLoc});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImageFromBrowseAsync(string imgLoc) {
            this.GetImageFromBrowseAsync(imgLoc, null);
        }
        
        /// <remarks/>
        public void GetImageFromBrowseAsync(string imgLoc, object userState) {
            if ((this.GetImageFromBrowseOperationCompleted == null)) {
                this.GetImageFromBrowseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageFromBrowseOperationCompleted);
            }
            this.InvokeAsync("GetImageFromBrowse", new object[] {
                        imgLoc}, this.GetImageFromBrowseOperationCompleted, userState);
        }
        
        private void OnGetImageFromBrowseOperationCompleted(object arg) {
            if ((this.GetImageFromBrowseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageFromBrowseCompleted(this, new GetImageFromBrowseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConvertByteArrayToBitmap", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bitmap ConvertByteArrayToBitmap([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] imgByteArray) {
            object[] results = this.Invoke("ConvertByteArrayToBitmap", new object[] {
                        imgByteArray});
            return ((Bitmap)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertByteArrayToBitmapAsync(byte[] imgByteArray) {
            this.ConvertByteArrayToBitmapAsync(imgByteArray, null);
        }
        
        /// <remarks/>
        public void ConvertByteArrayToBitmapAsync(byte[] imgByteArray, object userState) {
            if ((this.ConvertByteArrayToBitmapOperationCompleted == null)) {
                this.ConvertByteArrayToBitmapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertByteArrayToBitmapOperationCompleted);
            }
            this.InvokeAsync("ConvertByteArrayToBitmap", new object[] {
                        imgByteArray}, this.ConvertByteArrayToBitmapOperationCompleted, userState);
        }
        
        private void OnConvertByteArrayToBitmapOperationCompleted(object arg) {
            if ((this.ConvertByteArrayToBitmapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertByteArrayToBitmapCompleted(this, new ConvertByteArrayToBitmapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConvertBitmapToByteArray", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ConvertBitmapToByteArray(Bitmap bitmapImg) {
            object[] results = this.Invoke("ConvertBitmapToByteArray", new object[] {
                        bitmapImg});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ConvertBitmapToByteArrayAsync(Bitmap bitmapImg) {
            this.ConvertBitmapToByteArrayAsync(bitmapImg, null);
        }
        
        /// <remarks/>
        public void ConvertBitmapToByteArrayAsync(Bitmap bitmapImg, object userState) {
            if ((this.ConvertBitmapToByteArrayOperationCompleted == null)) {
                this.ConvertBitmapToByteArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertBitmapToByteArrayOperationCompleted);
            }
            this.InvokeAsync("ConvertBitmapToByteArray", new object[] {
                        bitmapImg}, this.ConvertBitmapToByteArrayOperationCompleted, userState);
        }
        
        private void OnConvertBitmapToByteArrayOperationCompleted(object arg) {
            if ((this.ConvertBitmapToByteArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertBitmapToByteArrayCompleted(this, new ConvertBitmapToByteArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Bitmap : Image {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bitmap))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class Image : MarshalByRefObject {
        
        private object tagField;
        
        private ColorPalette paletteField;
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
        
        /// <remarks/>
        public ColorPalette Palette {
            get {
                return this.paletteField;
            }
            set {
                this.paletteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ColorPalette {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Image))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bitmap))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class MarshalByRefObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void checkEmptyCompletedEventHandler(object sender, checkEmptyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkEmptyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkEmptyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCurrentDateTimeCompletedEventHandler(object sender, GetCurrentDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ResizeCompletedEventHandler(object sender, ResizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetImageFromBrowseCompletedEventHandler(object sender, GetImageFromBrowseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageFromBrowseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageFromBrowseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ConvertByteArrayToBitmapCompletedEventHandler(object sender, ConvertByteArrayToBitmapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertByteArrayToBitmapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertByteArrayToBitmapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Bitmap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bitmap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ConvertBitmapToByteArrayCompletedEventHandler(object sender, ConvertBitmapToByteArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertBitmapToByteArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertBitmapToByteArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591